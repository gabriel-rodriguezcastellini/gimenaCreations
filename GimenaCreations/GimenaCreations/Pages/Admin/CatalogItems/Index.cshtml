@page
@model GimenaCreations.Pages.Admin.CatalogItems.IndexModel
@using GimenaCreations.Constants;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Catalog";
    Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
    ViewData["ActivePage"] = ManageNavPages.Catalog;
}

<h1>Index</h1>

@if((await AuthorizationService.AuthorizeAsync(User, Permissions.CatalogItems.Create)).Succeeded)
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].PictureFileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].CatalogType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].AvailableStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].RestockThreshold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].MaxStockThreshold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CatalogItem[0].OnReorder)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CatalogItem)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <img src="~/@item.PictureFileName" class="w-75">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CatalogType.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AvailableStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RestockThreshold)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxStockThreshold)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OnReorder)
                </td>
                <td>
                    @if((await AuthorizationService.AuthorizeAsync(User, Permissions.CatalogItems.Edit)).Succeeded)
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>                    

                    @if((await AuthorizationService.AuthorizeAsync(User, Permissions.CatalogItems.Delete)).Succeeded)
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
